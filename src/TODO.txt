render head
render diff
render staged
each step will set cursor somehow
there will be more section.
someone have to decide what it will be.
Diff in the root must be Repo instead. and store itself diffs of unstaged and staged changes.
also new files.

Lets imagine for now, that Diff in root is Repo and DiffView is repo view.
It must store line where to start next section.
Perhaps just CURRENT_CURSOR and thats it!
This position will be moved always.
Each rendered section (diff, new files etc) must have start line and end line to detect
when something pressed, the proper section which apply action to.
so: current_cursor - floating position.
And each struct tracks its border/limits (eg start/end)


- DONE - hit right. expand + collapse. hit right - expand. IT IS JUST STARTED WITH LINE 4
- DONE looks like it does not required to return option from cursor
- DONE - the problem with hunk is - it remains active by self.hidden lines!
      hunk         Hunk A         Hunk
           line       line A         line A
           line       lime A         line A
      Active by child
      2 cases.
        - we either make then inactive if they are collapsed OR
        - check dymamically if they are collapsed?
    
- DONE - why it is called 12 times????? looks like those are another hunks! they are just collapsed. view.line_no is 0
- DONE - why so many times collapsed are called for 0 0

- open with no diff in files. works weird

- BUG when put mouse in the end of line it does not highlighted
- put symbolic expand tag/href to expand regions with mouse

-- HUGHLIGHT for pgup/pgdown doesn not work
- put label with current repo name (relative to path the app is started)
- try to replace &mut dyn RecursiveViewContainer with type alias

- adwaita ToolbarView
- popup widnwow from current line (commit)

- open another repo in file choose dialog
- open repo under other user causeing error! handle it!

- .gitignore does not counted in gitlib2 !!!! flags : Status(IGNORED)


- in parallel thread, go to the source file, while read hunks and put whole file in tree sitter,
make a syntax, highlight it and put into the diff. while insert line into the buffer, paint it with tags
by the tree sitter structure
- after push add text link to mr in gitlab and github!
