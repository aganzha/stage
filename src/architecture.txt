1. text view emit events from user keypress and mouse up to main
2. main call status with theese events.
3. status calls git with thread spawn and pass to it it os own views data.
4. git calls gitlib, create new data and enrich views from old data
5. push data back to main via events. now new data have allready an old views.
6. main call status render with old views.
!!!!
7. when i call update status from braches, there is nothing to enrich! just brand new data!
8. each data structure has enrich view method except Line. because Lines enriching comes from Hunk.
9. enriching call transfer_view, which is implemented in Line, Hunk, File and Head. Diff has no view, so, no transfer
!!!!!!!!!
10. looks line transfer view must be implemented in something called ViewHolder. Which i do not have.
    i have only ViewContainer.
11. after git enriches view it call then main with event and new data, and main call status.update_staged,
    updated_unstaged, update_unstaged etc. TODO: looks like updating must go to this stage, not be done in git!
    Also, possible proposal - to make it all in text_view, via await. is it ok, or no?
    if do so, the text_view become thing in itself. it controls everything itself.
    There will be no way, to call it from outside. It could operaste data himself.
    Hm....
So. first step is to move view enriching to text_view itself!
Thats good idea, btw. all data manipulation will be locked inside text_view.
It will be autonomuse then!
... it is cool idea btw. means each call to git from status will return full new status...
and update it manually... uh oh. it need to update from oother windows anyway, so why bother about global evemts in main...
